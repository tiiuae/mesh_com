#!/bin/sh


# The daemon's name (to ensure uniqueness and for stop, restart and status)
name="jamming_avoidance"

# The path of the Python executable
python_exec="/usr/bin/python"

# The path of the Python script
python_script="/opt/mesh_com/modules/sc-mesh-secure-deployment/src/2_0/features/jamming/jamming_setup.py"

command_args=""

[ -x "$python_exec" ] || exit 0
[ -f "$python_script" ] || exit 0

# The path of the daemon executable
daemon="/usr/bin/daemon"

# Other configuration parameters for the service
pidfiles="/var/run"
user=""
chroot=""
chdir=""
umask=""
stdout="daemon.info"
stderr="daemon.err"
daemon_start_args="--delay=10 --attempts=1 --respawn"


case "$1" in
    start)
        if "$daemon" --running --name "$name" --pidfiles "$pidfiles"
        then
            echo "$name is already running."
        else
            echo -n "Starting $name..."
            "$daemon" $daemon_start_args \
                --name "$name" --pidfiles "$pidfiles" \
                ${user:+--user $user} ${chroot:+--chroot $chroot} \
                ${chdir:+--chdir $chdir} ${umask:+--umask $umask} \
                ${stdout:+--stdout $stdout} ${stderr:+--stderr $stderr} \
                -- \
                "$python_exec" "$python_script" $command_args
            echo done.
        fi
        ;;


    stop)
        if "$daemon" --running --name "$name" --pidfiles "$pidfiles"
        then
            echo -n "Stopping $name..."
            "$daemon" --stop --name "$name" --pidfiles "$pidfiles"
            echo done.
        else
            echo "$name is not running."
        fi
        ;;


    restart|reload)
        if "$daemon" --running --name "$name" --pidfiles "$pidfiles"
        then
            echo -n "Restarting $name..."
            "$daemon" --restart --name "$name" --pidfiles "$pidfiles"
            echo done.
        else
            echo "$name is not running."
            exit 1
        fi
        ;;


    status)
        "$daemon" --running --name "$name" --pidfiles "$pidfiles" --verbose
        ;;


    *)
        echo "usage: $0 <start|stop|restart|reload|status>" >&2
        exit 1
esac


exit 0
